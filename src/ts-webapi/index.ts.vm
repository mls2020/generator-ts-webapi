import { IService } from './interfaces'
import { createRouter } from './routes';
import swaggerRouter from './swagger/swagger';
import serveSpa from './common/serveSpa';
import { ConfigurationFunction, builder, getConfiguration } from './common/configurator';
export const createMiddlewares = (service: IService, options?: ConfigurationFunction) => {
  if (options) {
    options(builder)
  }
  const config = getConfiguration();
  console.info(Object.keys(config).filter(i => config[i]).join('\n'));

  return {
    swagger: config.useSwagger && swaggerRouter,
    routes: createRouter(service, config),
    serveSpa: config.serveSpa && serveSpa(config.serveSpa.indexFile)
  }
}

